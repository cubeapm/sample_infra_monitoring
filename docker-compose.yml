version: "3"
services:

  aerospike:
    image: aerospike:ce-8.1.0.1
    ports:
      - "3000:3000"  # client
      - "3001:3001"  # fabric
      - "3002:3002"  # mesh
      - "3003:3003"  # info
      
  apache:
    image: httpd:2.4-alpine
    volumes:
      - ./httpd.conf:/usr/local/apache2/conf/httpd.conf
    ports:
      - 8080:80

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    environment:
      - ELASTIC_PASSWORD=elastic
      - discovery.type=single-node
      - xpack.security.http.ssl.enabled=false
      - xpack.license.self_generated.type=trial
    ports:
      - 9200:9200

  haproxy:
    image: haproxy:3.0.9
    ports:
      - "8000:8000" # Frontend port 1
      - "8001:8001" # Frontend port 2
      - "8404:8404" # Stats page
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk

  kafdrop:
    image: obsidiandynamics/kafdrop:4.0.0
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  memcached:
    image: memcached:1.6.38-alpine3.21
    ports:
      - "11211:11211"

  mongo:
    image: mongo:7.0.12
    ports:
      - "27017:27017"

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=test
    ports:
      - "3306:3306"

  nginx:
    image: nginx:1.24.0
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8008:80

  postgres:
    image: postgres:16.8
    environment:
      - POSTGRES_USER=cubeapm
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=test
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:4.0.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=YOUR_USERNAME
      - RABBITMQ_DEFAULT_PASS=YOUR_PASSWORD
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:alpine3.18
    ports:
      - "6379:6379"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.123.0
    volumes:
      - ./otel-collector-config.yml:/etc/otelcol-contrib/config.yaml
    restart: always
